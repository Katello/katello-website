#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

set -e

if [ -z "$OPENSHIFT_DB_HOST" ]
then
    echo 1>&2
    echo "Could not find mysql database.  Please run:" 1>&2
    echo "rhc app cartridge add -a $OPENSHIFT_APP_NAME -c mysql-5.1" 1>&2
    echo "then make a sample commit (add whitespace somewhere) and re-push" 1>&2
    echo 1>&2
fi

RETRY=60
while [ $RETRY -gt 0 ] ; do
    #reload env variables
    for env_var in  $OPENSHIFT_HOMEDIR/.env/*
    do
        . $env_var
    done

    #check for db
    if [ -n "$OPENSHIFT_DB_HOST" ]
    then
        echo "Database server found at $OPENSHIFT_DB_HOST. initializing..."
        sleep 5
        break
    fi

    sleep 1
    RETRY=$(( $RETRY - 1 ))
done

if [ -z "$OPENSHIFT_DB_HOST" ]
then
    exit 5
fi

# Confirm database exists, if not create it
if ! /usr/bin/mysql -u "$OPENSHIFT_DB_USERNAME" --password="$OPENSHIFT_DB_PASSWORD" -h "$OPENSHIFT_DB_HOST" -e "select * from wp_commentmeta;" "$OPENSHIFT_APP_NAME" > /dev/null 2>&1
then
    echo
    echo "Database schema not found, importing 'wordpress.sql' schema."
    echo
    cat "$OPENSHIFT_REPO_DIR/.openshift/action_hooks/wordpress.sql" |sed s/"wordpress-dbvs.rhcloud.com"/"$OPENSHIFT_APP_DNS"/g > "$OPENSHIFT_REPO_DIR/.openshift/action_hooks/wordpress2.sql"
    /usr/bin/mysql -u "$OPENSHIFT_DB_USERNAME" --password="$OPENSHIFT_DB_PASSWORD" -h "$OPENSHIFT_DB_HOST" "$OPENSHIFT_APP_NAME" < "$OPENSHIFT_REPO_DIR/.openshift/action_hooks/wordpress2.sql"
    echo
    echo "done."
    echo "=================================================="
    echo "  Wordpress-Admin login: admin"
    echo "  Wordpress-Admin password: OpenShiftAdmin"
    echo "  Don't forget to change your Wordpress admin password!"
    echo "=================================================="
else
    echo "Database found, skipping import."
fi

$OPENSHIFT_GEAR_CTL_SCRIPT stop
$OPENSHIFT_GEAR_CTL_SCRIPT start